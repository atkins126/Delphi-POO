unit Model.Interfaces.Query;

interface

uses
  Data.DB,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.Stan.Param,
  FireDAC.DatS,
  FireDAC.DApt.Intf,
  FireDAC.DApt,
  FireDAC.Stan.ExprFuncs,
  FireDAC.Phys.SQLiteWrapper.Stat,
  FireDAC.Phys.SQLiteDef,
  FireDAC.VCLUI.Wait,
  FireDAC.Comp.UI,
  FireDAC.Phys.SQLite,
  FireDAC.Comp.DataSet,
  FireDAC.Comp.Client,
  Model.Interfaces.Conexao;

  type
   TModelQuery = class(TInterfacedObject, iQuery)
     private
      FParent : iConexao;
      FQuery : TFDQuery;
     public
       constructor create(Parent : iConexao);
       destructor destroy; override;
       class function New(Parent : iConexao) : iQuery;
       function SQL(aValue : string) : iQuery;
       function DataSet : TDataSet;
    end;

implementation

{ TModelQuery }

end.
